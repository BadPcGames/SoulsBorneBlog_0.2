@using WebApplication1.DbModels
@model Game
@{
    ViewData["Title"] = "Edit blog";
}

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js" integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF" crossorigin="anonymous"></script>
    <style>
        #fileInput {
            display: none;
        }

        #image {
            cursor: pointer;
            width: auto;
            max-height:100%;
        }

        #colorBox {
            border: 1px solid #000;
        }
        .name{
            width:100%;
            align:center;
        }
        .imageForm{
            height:100%;
            align-items:center;
        }
    </style>
</head>
<body>
    <form id="gameForm" asp-action="Edit" asp-controller="Game" method="post" enctype="multipart/form-data">
        <input type="color" id="favcolor" name="Color" value="@Model.Color">
        <div class="container" id="colorBox" style="background-color:@Model.Color">
            <div class="row">
                <div class="col-sm-0 col-md-2"></div>
                <div class="col-sm-12 col-md-8">
                    <div class="container">
                        <div class="row">
                            <div class="col-12 "> 
                                <input class="name "type="text" name="GameName" value="@Model.GameName" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8"> 
                                <textarea class="name" name="Description" rows="5">@Model.Description</textarea>
                            </div>
                            <div class="col-4" class="imageForm">  
                                @{
                                    var base64Image = Convert.ToBase64String(Model.GameCharacter);
                                    var imageSrc = $"data:image/png;base64,{base64Image}";
                                    <img id="image" src="@imageSrc" alt="Click to select a file" class="img-fluid" />
                                }
                                <input type="file" id="fileInput" value="@imageSrc" name="GameCharacter" accept="image/*">
                            </div>
                        </div>
                    </div>
                <div class="col-sm-0 col-md-2"></div>
                </div>
            </div>
        </div>
        <input type="submit">
    </form>
</body>

<script>
    const image = document.getElementById('image');
    const fileInput = document.getElementById('fileInput');
    const form = document.getElementById('gameForm');

    image.addEventListener('click', () => {
        fileInput.click();
    });

    fileInput.addEventListener('change', (event) => {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = (e) => {
                image.src = e.target.result;
            };
            reader.readAsDataURL(file);
        }
    });

    form.addEventListener('submit', (event) => {
        if (!fileInput.value) {
            if(!image.src){
                event.preventDefault();
                alert('Please select a file before submitting the form.');
            }
            else{
                fileInput.value = image.src;
            }
        }
    });

    image.addEventListener('load', () => {
        const canvas = document.createElement('canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = image.naturalWidth;
        canvas.height = image.naturalHeight;
        ctx.drawImage(image, 0, 0);
        canvas.toBlob((blob) => {
            const file = new File([blob], 'image.png', { type: 'image/png' });
            const dataTransfer = new DataTransfer();
            dataTransfer.items.add(file);
            fileInput.files = dataTransfer.files;
        }, 'image/png');
    });
</script>

<script>
    const colorPicker = document.getElementById('favcolor');
    const colorBox = document.getElementById('colorBox');

    colorPicker.addEventListener('input', () => {
        colorBox.style.backgroundColor = colorPicker.value;
    });
</script>

