@{
    ViewData["Title"] = "Home Page";
}
@model IEnumerable<PostViewModel>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Фиксированный макет с прокручиваемым центральным блоком</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Cinzel:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <style>


        .parallelogram {
            width: 200px;
            height: 250px;
            position: relative;
            -webkit-transform: skew(20deg);
            -moz-transform: skew(20deg);
            -o-transform: skew(20deg);
            transform: skew(20deg);

        }

        .nav-tabs .nav-link {
            color: white; /* Цвет неактивной вкладки */
        }

        .characterImage {
            width: auto;
            height: 250px;
            position: absolute;
            top:50%;
            left: 25%;
            -webkit-transform: skew(-20deg) translate(-50%, -50%) scaleX(-1);
            -moz-transform: skew(-20deg) translate(-50%, -50%) scaleX(-1);
            -o-transform: skew(-20deg) translate(-50%, -50%) scaleX(-1);
            transform: skew(-20deg) translate(-50%, -50%) scaleX(-1);
        }

        .personImage {
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            display: flex;
            justify-content: center;
            align-items: end;
            width: 100%;
        }

        .post{
            border-radius:10px;
            border-bottom-left-radius:30px;
            border-bottom-right-radius: 30px;
            border-color:black;
            border: 5px solid;
            height:auto;
            margin:10px;
        }


        .postText{
            text-align: justify;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 5;
            line-clamp: 5;
            margin-left:10px;
            margin-right:10px;
        }

        .blogDes{
            text-align: justify;
            overflow: hidden;
            text-overflow: ellipsis;
            display: -webkit-box;
            -webkit-box-orient: vertical;
            -webkit-line-clamp: 1;
            line-clamp: 1;
        }


        .post img,
        .post video {
            max-width: 90%;
            height: auto;
            margin: 0 auto;
            display: block;
            max-height: 400px; 
            object-fit: cover;
            border-radius: 8px;
        }

        .post a{
            outline: none;
            text-decoration: none;
            color:black;
        }

        .post a:hover{
                border-bottom: 3px solid;
        }

        .postTitle{
            font-family: 'Cinzel', serif;    
        }

        .blogDes{
            margin:10px;
        }

        .post a {
            outline: none;
            text-decoration: none;
            color: black;
        }

        .post a:hover {
                border-bottom: 3px solid;
        }

        .link{
            outline: none;
            text-decoration: none;
        }
        
        .link:hover{
                border-bottom: 3px solid;
        }

        #activeBannerContainer {
            text-align: center;
            margin-bottom: 20px;
        }

        .active-banner-img {
            width: 100%;
            height: auto;
            aspect-ratio: 3 / 1;
            object-fit: cover;
            border-radius: 12px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.1);
            transform-origin: center;
        }

        .fixed-top-buttons {
            z-index: 1035; 
        }

    </style>

</head>
<body >

    <div class="container-fluid">
        <div class="d-flex justify-content-between align-items-center position-fixed start-0 end-0 p-3 fixed-top-buttons">
            <button class="btn btn-dark text-white" type="button" data-bs-toggle="offcanvas" data-bs-target="#mainOffcanvas" aria-controls="mainOffcanvas">
                Menu
            </button>
        </div>
    </div>
    @*    Center *@
    <div class="container" style="margin-top:10px">
        <div class="row">
            <div class="col-sm-2 col-md-2"></div>
            <div class="col-sm-4 col-md-8">
                <div id="activeBannerContainer" class="mb-3 text-center"></div>
                    <div class="row">
                        <div class="col-sm-0 col-md-2"></div>
                        <div class="col-sm-12 col-md-8">
                            <div id="activeBannerContainer" class="mb-3 text-center"></div>

                            <div class="content" id="postsContainer">
                            </div>
                        <div class="d-grid gap-2">
                            <button class="btn btn-dark" id="loadMoreButton" style="display: none; margin-left:20px;margin-right:20px"><h5>Load more</h5></button>
                        </div>
                        <div class="col-sm-0 col-md-2"></div>
                    </div>
            </div>
            <div class="col-sm-2 col-md-2"></div>
        </div>
    </div>



    <div class="offcanvas offcanvas-start bg-dark text-white"
         tabindex="-1"
         id="mainOffcanvas"
         aria-labelledby="mainOffcanvasLabel"
         data-bs-backdrop="true"
         data-bs-scroll="false">
        <div class="offcanvas-header">
            <h2 class="offcanvas-title" id="mainOffcanvasLabel">Menu</h2>
            <button type="button" class="btn-close btn-close-white" data-bs-dismiss="offcanvas" aria-label="Закрыть"></button>
        </div>
        <div class="offcanvas-body">
            <ul class="nav nav-tabs mb-3" id="offcanvasTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="filters-tab" data-bs-toggle="tab" data-bs-target="#filters" type="button" role="tab">Filters</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="blogs-tab" data-bs-toggle="tab" data-bs-target="#blogs" type="button" role="tab">Blogs</button>
                </li>
            </ul>
            <div class="tab-content" id="offcanvasTabContent">

                <!--Filters-->
                <div class="tab-pane fade show active" id="filters" role="tabpanel">
                    <div class="mb-3">
                        <label for="nameOfPost" class="form-label">Name</label>
                        <input type="text" id="nameOfPost" class="form-control" placeholder="Enter post name">
                    </div>

                    <div class="mb-3">
                        <label for="themeSelect" class="form-label">Theme</label>
                        <select id="themeSelect" class="form-select" name="theme">
                            <option value="">Choose theme...</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label for="gameSelect" class="form-label">Game</label>
                        <select id="gameSelect" class="form-select" name="Game">
                            <option value="">Choose game...</option>
                        </select>
                    </div>
                    <br>

                    <button id="applyFilters" class="btn btn-light">Apply Filters</button>

                    <div class="personImage bg-dark bg-opacity-50">
                        <div class="parallelogram">
                            <img class="characterImage" id="character"
                                 src="~/images/image-removebg-preview.png">
                        </div>
                    </div>
                </div>


                <!--Blogs-->
                <div class="tab-pane fade" id="blogs" role="tabpanel">
                    <div class="mb-4">
                        <label for="nameOfBlog" class="form-label">Search Blog</label>
                        <div class="input-group mb-3">
                            <input type="text" id="nameOfBlog" class="form-control" placeholder="Enter blog name">
                            <button id="findBlogButton" class="btn btn-secondary">Find</button>
                        </div>

                        <div class="d-flex justify-content-between">
                            <button id="loadOldButton" class="btn btn-outline-secondary">Back</button>
                            <button id="loadNewButton" class="btn btn-outline-secondary">Next</button>
                        </div>
                    </div>
                    <br>
                    <br>
                    <div id="blogContainer"></div>
                </div>
            </div>

        </div>
    </div>

</body>


<script>
    document.addEventListener('DOMContentLoaded', function () {
        const buttonsContainer = document.querySelector('.fixed-top-buttons');
        const offcanvasElements = document.querySelectorAll('.offcanvas');

        offcanvasElements.forEach(offcanvas => {
            offcanvas.addEventListener('shown.bs.offcanvas', () => {
                buttonsContainer.style.pointerEvents = 'none';
                buttonsContainer.style.opacity = '0';
            });

            offcanvas.addEventListener('hidden.bs.offcanvas', () => {
                const anyOpen = Array.from(offcanvasElements).some(oc => oc.classList.contains('show'));
                if (!anyOpen) {
                    buttonsContainer.style.pointerEvents = 'auto';
                    buttonsContainer.style.opacity = '1';
                }
            });
        });
    });


</script>

@* get blogs *@
<script>
    $(document).ready(function () {
        let currentPage = 1;
        const blogsPerPage = 3;
        let blogNameForSearch = null;

        function loadBlogs() {
            $.ajax({
                url: '/Blogs/GetBlogsForRecomendation',
                method: 'GET',
                dataType: 'json',
                data: {
                    currentPage: currentPage,
                    blogsPerPage: blogsPerPage,
                    blogName: blogNameForSearch
                },
                success: function (blogs) {
                    const container = document.getElementById('blogContainer');
                    const loadMoreButton = document.getElementById('loadNewButton');
                    const loadOldButton = document.getElementById('loadOldButton');

                    container.innerHTML = ''; 

                    if (blogs.length === 0) {
                        container.innerHTML = '<p>No blogs.</p>';
                        loadMoreButton.disabled = true;
                        loadOldButton.disabled = true;
                        return;
                    }
                    if (blogs.length <= blogsPerPage){
                        loadMoreButton.disabled = true;
                    }
                    else{
                        blogs = blogs.slice(0, blogsPerPage);
                        loadMoreButton.disabled=false;
                    }


                    let htmlContent = '';
                    blogs.forEach(blog => {
                        htmlContent += `
                                 <div class="blog card shadow-sm mb-4 p-3 bg-light text-dark">
                                    <div class="card-body">
                                        <h2 class="card-title text-center">
                                            <a href="/Posts/Index/${blog.id}" class="link text-dark">${blog.name}</a>
                                        </h2>
                                        <hr>
                                        <p style="text-align:center" class="card-text blogDes">${blog.description}</p>
                                        <p style="text-align:center" class="card-text"><strong>Author:</strong> ${blog.authorName} | <strong>Theme:</strong> ${blog.theme}</p>
                                    </div>
                                </div>
                            `;
                    });

                    container.innerHTML = htmlContent; 
                    loadOldButton.disabled = currentPage > 1 ? false : true;
                },
                error: function () {
                    alert('Error loading posts.');
                }
            });
        }

        document.getElementById('loadNewButton').addEventListener('click', function () {
            currentPage++;
            loadBlogs();
        });

        document.getElementById('loadOldButton').addEventListener('click', function () {
            if (currentPage > 1) {
                currentPage--;
                loadBlogs();
            }
        });

        document.getElementById('findBlogButton').addEventListener('click', function () {
            const blogName = $('#nameOfBlog').val()
            
            if (blogName == null||blogName==""){
                blogNameForSearch = null;
            }
            else{
                blogNameForSearch = blogName;
            }
            currentPage = 1;
            loadBlogs();
        });


        loadBlogs();
    });
</script>

@* get info for selector *@
<script>
    $.ajax({
        url: '@Url.Action("GetThemes", "Blogs")',
        method: 'GET',
        success: function (data) {
            data.forEach(function (theme) {
                $("#themeSelect").append(`<option value="${theme.name}">${theme.name}</option>`);
            });
        },
        error: function (error) {
            console.log("Ошибка при загрузке тем: ", error);
        }
    });

    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetGames", "Posts")',
            method: 'GET',
            success: function (games) {
                games.forEach(function (game) {
                    $("#gameSelect").append(`<option value="${game.gameName}">${game.gameName}</option>`);
                });
            },
            error: function () {
                console.error("Не удалось загрузить список игр.");
            }
        });
    });
</script>

@* get posts *@
<script>
    $(document).ready(function () {
        let currentPage = 1;
        const postsPerPage = 2;
        loadActiveBanner();

        function loadPosts() {
            const filterGame = $('#gameSelect').val();
            const filterTheme = $('#themeSelect').val();
            const filterName = $('#nameOfPost').val();

            const character = document.getElementById('character');

            if (filterGame !== "") {
                $.ajax({
                    url: '/Game/GetGame',
                    method: 'GET',
                    dataType: 'json',
                    data: { gameName: filterGame },
                    success: function (game) {
                        $('.parallelogram').css('background-color', game.color);
                        if (game.gameCharacter) {
                            character.src = `data:image/png;base64,${game.gameCharacter}`;
                        } else {
                            character.src = '/images/image-removebg-preview.png';
                        }
                    },
                    error: function () {
                        alert('Ошибка загрузки изображения.');
                    }
                });
            } else {
                $('.parallelogram').css('background-color', 'lightgray');
                character.src = '/images/image-removebg-preview.png';
            }
          

            $.ajax({
                url: '@Url.Action("GetPosts", "Posts")',
                method: 'GET',
                dataType: 'json',
                data: {
                    currentPage: currentPage,
                    postsPerPage: postsPerPage,
                    filterGame: filterGame,
                    filterTheme: filterTheme,
                    postName:filterName
                },
                success: function (posts) {
                    const container = document.getElementById('postsContainer');
                    const loadMoreButton = document.getElementById('loadMoreButton');

                    if (posts.length === 0 && currentPage === 1) {
                        container.innerHTML = '<p>No posts found.</p>';
                        loadMoreButton.style.display = 'none';
                        return;
                    }

                    if (posts.length === 0) {
                        loadMoreButton.style.display = 'none'; 
                        return;
                    }

                    let htmlContent = '';
                    posts.forEach(post => {
                        let postContent = '';
                        if (post.contents.length > 0) {
                            const firstContent = post.contents[0];
                            if (firstContent.contentType === 'Image') {
                                postContent = `<div><img src="data:image/png;base64,${firstContent.content}" alt="Image" class="img-fluid"></div>`;
                            } else if (firstContent.contentType === 'Video') {
                                postContent = `<video width="320" height="240" controls>
                                            <source src="data:video/mp4;base64,${firstContent.content}" type="video/mp4">
                                    </video>`;
                            } else if (firstContent.contentType === 'Text') {
                                const byteArray = Uint8Array.from(atob(firstContent.content), c => c.charCodeAt(0));
                                const decoder = new TextDecoder("utf-8");
                                const text = decoder.decode(byteArray);
                                postContent = `<div><p class="postText">${text}</p></div>`;
                            }
                        }
                        htmlContent += `
                                <div class="post" style="background-color:${post.color}">
                                    <div class="content">
                                        <h2 class="text-black text-center">
                                            <a href="/Posts/ReadPost/${post.id}" class="postTitle">${post.title}</a>
                                        </h2>
                                        ${postContent}
                                            <h4 class="text-black text-center">
                                                        <a href="/Posts/ReadPost/${post.id}" class="postTitle">Show post</a>
                                             </h4>
                                        <br>
                                         <p style="text-align:center">From: <a href="/Posts/Index/${post.blogId}">${post.blogName}</a> Maded by ${post.authorName}</p>
                                    
                                     </div>
                                </div>
                                <br>
                            `;
                    });

                    container.innerHTML += htmlContent;
                    currentPage++; 
                    loadMoreButton.style.display = posts.length < postsPerPage ? 'none' : 'block';
                },
                error: function () {
                    alert('Error loading posts.');
                }
            });
        }

        document.getElementById('loadMoreButton').addEventListener('click', loadPosts);

        $('#applyFilters').click(applyFilter);
        function applyFilter() {
            const container = document.getElementById('postsContainer');
            currentPage = 1;
            container.innerHTML = "";
            loadPosts();
        }
        applyFilter();
    });

    function loadActiveBanner() {
        $.ajax({
            url: '/Admin/GetHomeBanner',
            type: 'GET',
            success: function (response) {
                if (response && response.image) {
                    const img = $('<img>')
                        .attr('src', 'data:image/png;base64,' + response.image)
                        .addClass('active-banner-img');

                    $('#activeBannerContainer').empty().append(img);
                } else {
                    $('#activeBannerContainer').empty(); 
                }
            },
            error: function () {
                console.error('Ошибка при загрузке активного банера');
            }
        });
    }
</script>





